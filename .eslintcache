[{"/home/gau1rav/Desktop/React/upload-app/src/index.js":"1","/home/gau1rav/Desktop/React/upload-app/src/App.js":"2","/home/gau1rav/Desktop/React/upload-app/src/reportWebVitals.js":"3","/home/gau1rav/Desktop/React/upload-app/src/Pages/Home.js":"4","/home/gau1rav/Desktop/React/upload-app/src/Components/Navbar.js":"5","/home/gau1rav/Desktop/React/upload-app/src/Components/Footer.js":"6","/home/gau1rav/Desktop/React/upload-app/src/IPconfig.js":"7"},{"size":513,"mtime":1607072090251,"results":"8","hashOfConfig":"9"},{"size":528,"mtime":1607057543220,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607057543220,"results":"11","hashOfConfig":"9"},{"size":1515,"mtime":1607198653115,"results":"12","hashOfConfig":"9"},{"size":271,"mtime":1607198686204,"results":"13","hashOfConfig":"9"},{"size":4519,"mtime":1607194351528,"results":"14","hashOfConfig":"9"},{"size":60,"mtime":1607195330216,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"171evp1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gau1rav/Desktop/React/upload-app/src/index.js",[],["32","33"],"/home/gau1rav/Desktop/React/upload-app/src/App.js",[],"/home/gau1rav/Desktop/React/upload-app/src/reportWebVitals.js",[],"/home/gau1rav/Desktop/React/upload-app/src/Pages/Home.js",[],"/home/gau1rav/Desktop/React/upload-app/src/Components/Navbar.js",[],"/home/gau1rav/Desktop/React/upload-app/src/Components/Footer.js",["34","35"],"import React from 'react';\nimport axios from 'axios';\n\nimport '../css/Footer.css';\n\nimport IP from '../IPconfig';\n\nclass Footer extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uploading: false,\n      pause: false,\n      resume: false\n    };\n  }\n\n  async getUploadedBytes(file_id) {\n\n\n    let res = await axios.get('http://' +  IP.ip + '/user/curr_byte', {\n      headers: {\n        'file_id': file_id\n      }\n    });\n\n    var obj = {\n      'status': res.status,\n      'bytes': +res.data\n    }\n\n    return obj;\n  }\n\n  onProgress(uploaded_byte, total) {\n    console.log(`Uploaded ${uploaded_byte} out of ${total}`);\n  }\n\n  async make_upload_req(start_byte, file_id) {\n    let xhr = this.xhr = new XMLHttpRequest();\n\n    xhr.open('POST', 'http://' +  IP.ip + '/user/upload', true); // configuring the request\n\n    xhr.setRequestHeader('file_id', file_id); // adding file_id in the req header\n    xhr.setRequestHeader('start_byte', start_byte); // adding current byte in the req header\n\n    // xhr.upload.onprogress = (event) => {\n    //   this.onProgress(start_byte + event.loaded, start_byte + event.total); // to show the upload progress to user\n    // }\n\n    console.log(`${start_byte}`);\n\n    var formData = new FormData();\n    formData.append('file', this.props.data.file.slice(start_byte));\n\n    xhr.send(this.props.data.file.slice(start_byte));\n\n    return await new Promise((resolve, reject) => {\n\n      xhr.onload = xhr.onerror = () => {\n        if(xhr.status == 200) resolve(true);\n        else reject(new Error('Upload failed: ' + xhr.statusText));\n      }\n\n      xhr.onabort = () => resolve(false); // is trigerred when abort is called -- pauses the upload\n    })\n  }\n\n  async upload_file() {\n    let file = this.props.data.file;\n\n    var file_id = file.name + '-' + file.size + '-' + file.lastModified;\n\n    var data = await this.getUploadedBytes(file_id);\n\n    if(data.status != 200) {\n      this.setState({\n        uploading: false\n      }, () => alert(`Unable to upload file. Request failed with status ${data.status}`));\n      return;\n    }\n\n    var is_uploaded = await this.make_upload_req(data.bytes, file_id);\n\n    if(is_uploaded) {\n      console.log('Success: File is uploaded');\n      this.setState({\n        uploading: false,\n        pause: false,\n        resume: false\n      })\n    }\n    else console.log('Upload is paused');\n  }\n\n  upload = () => {\n    if(this.props.data.file_selected) {\n      this.setState({uploading: true}, () => {\n        this.upload_file();\n      });\n    }\n    else alert('There is nothing to upload. Please select a file');\n  }\n\n  delete_pending() {\n    this.xhr.abort(); // abort the current upload first\n\n    // make a request to server telling it to delete the pending upload\n    let file = this.props.data.file;\n\n    var file_id = file.name + '-' + file.size + '-' + file.lastModified;\n\n    axios.get('http://' +  IP.ip + '/user/cancel_upload', {\n      headers: {\n        'file_id': file_id\n      }\n    })\n    .then(res => console.log(res.data))\n    .catch(err => console.log(err));\n  }\n\n  cancel = () => {\n    if(this.state.uploading || this.state.pause || this.state.resume) {\n      this.setState({\n        uploading: false,\n        pause: false,\n        resume: false\n      }, () => this.delete_pending());\n    }\n    else alert('There is nothing to cancel');\n  }\n\n  pause = () => {\n    this.setState({\n      uploading: false,\n      pause: true,\n      resume: false\n    }, () => this.xhr.abort());\n  }\n\n  resume = () => {\n    this.setState({\n      uploading: true,\n      resume: true,\n      pause: false\n    }, () => this.upload_file());\n  }\n\n  render_upload_btn() {\n    if(!this.state.uploading && !this.state.pause) {\n      return (\n        <button className = \"footer_btn\" id = \"submit_btn\" onClick = {this.upload}>Upload File</button>\n      );\n    }\n\n    else {\n      if(!this.state.pause) {\n        return(\n          <button className = \"footer_btn\" id = \"pause_btn\" onClick = {this.pause}>Pause</button>\n        );\n      }\n      else {\n        return(\n          <button className = \"footer_btn\" id = \"resume_btn\" onClick = {this.resume}>Resume</button>\n        );\n      }\n    }\n  }\n\n  render_cancel_btn() {\n    return(\n      <button className = \"footer_btn\" id = \"cancel_btn\" onClick = {this.cancel}>Cancel</button>\n    );\n  }\n\n  render() {\n    return(\n      <div className = \"footer_container\">\n        {this.render_upload_btn()}\n        {this.render_cancel_btn()}\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","/home/gau1rav/Desktop/React/upload-app/src/IPconfig.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":63,"column":23,"nodeType":"42","messageId":"43","endLine":63,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":78,"column":20,"nodeType":"42","messageId":"43","endLine":78,"endColumn":22},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]